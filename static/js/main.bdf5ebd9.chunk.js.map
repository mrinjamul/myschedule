{"version":3,"sources":["components/Loading.js","components/Fschedule.js","components/Day.js","components/Holiday.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Loading","className","style","height","Schedule","classes","color","Day","props","Class_1","Class_2","Holiday","state","fullView","displayTime","setInterval","time","Date","hh","getHours","mm","getMinutes","ss","getSeconds","ampm","setState","timeOfDay","DayName","CurrentS","sed","displayToday","date","day","getDay","hours","now","messages","this","Fschedule","onClick","Component","App","isLoading","setTimeout","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bdf5ebd9.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Loading.css\";\nfunction Loading() {\n  return (\n    <div>\n      <div className=\"card\">\n        <center>\n          <br />\n          <div className=\"card__image loading\" style={{ height: \"4em\" }}></div>\n          <div className=\"card__title loading\"></div>\n        </center>\n        <div\n          className=\"card__description loading\"\n          style={{ height: \"3em\" }}\n        ></div>\n        <div className=\"card__description loading\"></div>\n      </div>\n    </div>\n  );\n}\nexport default Loading;\n","import React from \"react\";\n\nfunction Schedule() {\n  // const room = [\" \", \"F1\", \"S1\", \"⇨\"];\n  const classes = [\n    \" \",\n    \"JAVA PROGRAMMING (FBA)\",\n    \"MULTIMEDIA & ANIMATION TECHNIQE (MR)\",\n    \"SOFTWARE ENGINEERING (SD)\",\n    \"THEORY OF COMPUTATION (JM)\",\n    \"OPERATING SYSTEM (SD)\",\n  ];\n\n  // let r1 = room[1];\n  // let r2 = room[2];\n  // let r3 = room[3];\n\n  return (\n    <div className=\"section\">\n      <h1 style={{ color: \"#3a476d\" }}>\n        You are currently viewing full schedule\n      </h1>\n      <table>\n        <thead>\n          <tr className=\"selected\">\n            <th>Day</th>\n            <th>11am - 12pm</th>\n            <th>2pm - 3pm</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr className=\"select\">\n            <td>Sunday</td>\n            <td> {classes[1]} </td>\n            <td> {classes[2]} </td>\n          </tr>\n          <tr className=\"selected\">\n            <td>Monday</td>\n            <td> {classes[3]} </td>\n            <td> {classes[4]} </td>\n          </tr>\n          <tr className=\"select\">\n            <td>Tuesday</td>\n            <td> {classes[2]} </td>\n            <td> {classes[5]} </td>\n          </tr>\n          <tr className=\"selected\">\n            <td>Wednesday</td>\n            <td> {classes[1]} </td>\n            <td> {classes[3]} </td>\n          </tr>\n          <tr className=\"select\">\n            <td>Thursday</td>\n            <td> {classes[5]} </td>\n            <td> {classes[4]} </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Schedule;\n","import React from \"react\";\n\nfunction Day(props) {\n  const { Day, Class_1, Class_2 } = props;\n  return (\n    <div>\n      <table>\n        <thead>\n          <tr className=\"selected\">\n            <th>Day</th>\n            <th>11am - 12pm</th>\n            <th>2pm - 3pm</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr className=\"select\">\n            <td>{Day}</td>\n            <td> {Class_1} </td>\n            <td> {Class_2} </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\nexport default Day;\n","import React from \"react\";\n\nfunction Holiday(props) {\n  const { Day } = props;\n  return (\n    <div>\n      <h1> {Day} : Today is Holiday</h1>\n    </div>\n  );\n}\nexport default Holiday;\n","import React, { Component } from \"react\";\nimport Fschedule from \"./Fschedule\";\nimport Day from \"./Day\";\nimport Holiday from \"./Holiday\";\n\nimport \"./Main.css\";\n\nclass Schedule extends Component {\n  constructor() {\n    super();\n    this.state = {\n      fullView: false,\n      displayTime: \"HH:MM:SS AMPM\",\n    };\n\n    setInterval(() => {\n      const time = new Date();\n      var hh = time.getHours();\n      var mm = time.getMinutes();\n      var ss = time.getSeconds();\n\n      var ampm = hh >= 12 ? \"PM\" : \"AM\";\n      hh = hh > 12 ? hh - 12 : hh;\n      hh = hh < 10 ? \"0\" + hh : hh;\n      mm = mm < 10 ? \"0\" + mm : mm;\n      ss = ss < 10 ? \"0\" + ss : ss;\n      hh = hh === \"00\" ? \"12\" : hh;\n\n      this.setState({\n        displayTime:\n          ss % 2 === 0\n            ? hh + \":\" + mm + \":\" + ss + \" \" + ampm\n            : hh + \" \" + mm + \" \" + ss + \" \" + ampm,\n      });\n    }, 500);\n  }\n\n  // handleClick = () => {\n  //   this.setState((prevState) => {\n  //     return {\n  //       fullView: !prevState.fullView,\n  //     };\n  //   });\n  // };\n\n  render() {\n    const date = new Date();\n    const day = date.getDay();\n    const hours = date.getHours();\n\n    const now = date.getHours() * 60 + date.getMinutes();\n    const eleven = 11 * 60;\n    const twelve = 12 * 60;\n    // const thirteen = 13 * 60;\n    const fourteen = 14 * 60;\n    const fifteen = 15 * 60;\n\n    let timeOfDay;\n    let DayName;\n    let CurrentS;\n    let Class_1;\n    let Class_2;\n\n    // const room = [\n    //     ' ',\n    //     'F1',\n    //     'S1',\n    //     '⇨',\n    // ];\n    const classes = [\n      \" \",\n      \"JAVA PROGRAMMING (FBA)\",\n      \"MULTIMEDIA & ANIMATION TECHNIQE (MR)\",\n      \"SOFTWARE ENGINEERING (SD)\",\n      \"THEORY OF COMPUTATION (JM)\",\n      \"OPERATING SYSTEM (SD)\",\n    ];\n    const messages = [\"Break Time\", \"No class available right now !\"];\n\n    if (5 < hours && hours < 12) {\n      timeOfDay = \"Morning\";\n    } else if (hours >= 12 && hours < 17) {\n      timeOfDay = \"Afternoon\";\n    } else if (hours > 17 && hours < 20) {\n      timeOfDay = \"Evening\";\n    } else if (hours > 0 && hours < 2) {\n      timeOfDay = \"Mid Night\";\n    } else if (hours > 4 && hours < 5) {\n      timeOfDay = \"Dawn\";\n    } else {\n      timeOfDay = \"Night\";\n    }\n\n    if (day === 0) {\n      DayName = \"Sunday\";\n      Class_1 = classes[1];\n      Class_2 = classes[2];\n      if (eleven <= now && now < twelve) {\n        CurrentS = classes[1];\n      } else if (twelve <= now && now < fourteen) {\n        CurrentS = messages[0];\n      } else if (fourteen <= now && now < fifteen) {\n        CurrentS = classes[2];\n      } else {\n        CurrentS = messages[1];\n      }\n    } else if (day === 1) {\n      DayName = \"Monday\";\n      Class_1 = classes[3];\n      Class_2 = classes[4];\n      if (eleven <= now && now < twelve) {\n        CurrentS = classes[3];\n      } else if (twelve <= now && now < fourteen) {\n        CurrentS = messages[0];\n      } else if (fourteen <= now && now < fifteen) {\n        CurrentS = classes[4];\n      } else {\n        CurrentS = messages[1];\n      }\n    } else if (day === 2) {\n      DayName = \"Tuesday\";\n      Class_1 = classes[2];\n      Class_2 = classes[5];\n      if (eleven <= now && now < twelve) {\n        CurrentS = classes[2];\n      } else if (twelve <= now && now < fourteen) {\n        CurrentS = messages[0];\n      } else if (fourteen <= now && now < fifteen) {\n        CurrentS = classes[5];\n      } else {\n        CurrentS = messages[1];\n      }\n    } else if (day === 3) {\n      DayName = \"Wednesday\";\n      Class_1 = classes[1];\n      Class_2 = classes[3];\n      if (eleven <= now && now < twelve) {\n        CurrentS = classes[1];\n      } else if (twelve <= now && now < fourteen) {\n        CurrentS = messages[0];\n      } else if (fourteen <= now && now < fifteen) {\n        CurrentS = classes[3];\n      } else {\n        CurrentS = messages[1];\n      }\n    } else if (day === 4) {\n      DayName = \"Thursday\";\n      Class_1 = classes[5];\n      Class_2 = classes[4];\n      if (eleven <= now && now < twelve) {\n        CurrentS = classes[5];\n      } else if (twelve <= now && now < fourteen) {\n        CurrentS = messages[0];\n      } else if (fourteen <= now && now < fifteen) {\n        CurrentS = classes[4];\n      } else {\n        CurrentS = messages[1];\n      }\n    } else if (day === 5) {\n      DayName = \"Friday\";\n      CurrentS = messages[1];\n    } else {\n      DayName = \"Saturday\";\n      CurrentS = messages[1];\n    }\n\n    let sed;\n    if (this.state.fullView === true) {\n      sed = <Fschedule />;\n    }\n    let displayToday;\n    if (day === 5 || day === 6) {\n      displayToday = <Holiday Day={DayName} />;\n    } else {\n      displayToday = <Day Day={DayName} Class_1={Class_1} Class_2={Class_2} />;\n    }\n    return (\n      <div className=\"main\">\n        <div className=\"section\">\n          <h1>\n            <span>My College Schedule</span>\n          </h1>\n          <h1>\n            Time: {this.state.displayTime} , {timeOfDay}{\" \"}\n          </h1>\n          <h1>Now : {CurrentS}</h1>\n          {displayToday}\n          <br />\n          <button\n            onClick={() => {\n              this.state.fullView === false\n                ? this.setState({ fullView: true })\n                : this.setState({ fullView: false });\n            }}\n          >\n            <b>View Full Schedule</b>\n          </button>\n        </div>\n        {sed}\n      </div>\n    );\n  }\n}\n\nexport default Schedule;\n","import React, { Component } from \"react\";\nimport Loading from \"./components/Loading\";\nimport Schedule from \"./components/Main\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n    };\n  }\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        isLoading: false,\n      });\n    }, 1500);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.isLoading ? (\n          <Loading />\n        ) : (\n          <div>\n            <Schedule />\n            <h3 className=\"copyright\"> Updated on 13th September 2020. </h3>\n            <h3 className=\"copyright\">\n              Made with{\" \"}\n              <font color=\"red\">\n                <b> ❤ </b>\n              </font>{\" \"}\n              by Injamul Mohammad Mollah\n            </h3>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}