{"version":3,"sources":["components/Loading.js","components/classes.js","components/Fschedule.js","components/Day.js","components/Holiday.js","components/Expired.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Loading","className","style","height","classes","Schedule","color","Day","props","Class_1","Class_2","Holiday","Expired","role","aria-label","border","href","state","fullView","displayTime","setInterval","time","Date","hh","getHours","mm","getMinutes","ss","getSeconds","ampm","setState","timeOfDay","DayName","CurrentS","date","day","getDay","hours","now","eleven","thirteenHalf","fourteen","sixteenHalf","availability","parse","this","expires","sed","displayToday","messages","Fschedule","onClick","Component","App","isLoading","updateOn","setTimeout","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d6d242cb.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Loading.css\";\nfunction Loading() {\n  return (\n    <div>\n      <div className=\"card\">\n        <center>\n          <br />\n          <div className=\"card__image loading\" style={{ height: \"4em\" }}></div>\n          <div className=\"card__title loading\"></div>\n        </center>\n        <div\n          className=\"card__description loading\"\n          style={{ height: \"3em\" }}\n        ></div>\n        <div className=\"card__description loading\"></div>\n      </div>\n    </div>\n  );\n}\nexport default Loading;\n","export const classes = [\n    \" \",\n    \"JAVA PROGRAMMING (AHM)\",\n    \"MULTIMEDIA & ANIMATION TECHNIQE (FBA)\",\n    \"OPERATING SYSTEM (SD)\",\n    \"INDUSTRIAL PROJECT & ENTERPRENEURSHIP DEVELOPMENT\",\n    \"PROFESSIONAL PRACTICE-III (SD)\",\n    \"LIB/TUTORIAL\",\n  ];\n// eslint-disable-next-line\nexport default {classes}","import React from \"react\";\nimport {classes} from \"./classes\"\n\nfunction Schedule() {\n  // const room = [\" \", \"F1\", \"S1\", \"‚á®\"];\n\n  // let r1 = room[1];\n  // let r2 = room[2];\n  // let r3 = room[3];\n\n  return (\n    <div className=\"section\">\n      <h1 style={{ color: \"#3a476d\" }}>\n        You are currently viewing full schedule\n      </h1>\n      <table>\n        <thead>\n          <tr className=\"selected\">\n            <th>Day</th>\n            <th>11am - 1:30pm</th>\n            <th>2pm - 4:30pm</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr className=\"select\">\n            <td>Sunday</td>\n            <td> {classes[2]} </td>\n            <td> {classes[5]} </td>\n          </tr>\n          <tr className=\"selected\">\n            <td>Monday</td>\n            <td> {classes[3]} </td>\n            <td> {classes[4]} </td>\n          </tr>\n          <tr className=\"select\">\n            <td>Tuesday</td>\n            <td> {classes[1]} </td>\n            <td> {classes[3]} </td>\n          </tr>\n          <tr className=\"selected\">\n            <td>Wednesday</td>\n            <td> {classes[1]} </td>\n            <td> {classes[2]} </td>\n          </tr>\n          <tr className=\"select\">\n            <td>Thursday</td>\n            <td> {classes[6]} </td>\n            <td> {classes[5]} </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Schedule;\n","import React from \"react\";\n\nfunction Day(props) {\n  const { Day, Class_1, Class_2 } = props;\n  return (\n    <div>\n      <table>\n        <thead>\n          <tr className=\"selected\">\n            <th>Day</th>\n            <th>11am - 1:30pm</th>\n            <th>2pm - 4:30pm</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr className=\"select\">\n            <td>{Day}</td>\n            <td> {Class_1} </td>\n            <td> {Class_2} </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\nexport default Day;\n","import React from \"react\";\n\nfunction Holiday(props) {\n  const { Day } = props;\n  return (\n    <div>\n      <h1> {Day} : Today is Holiday</h1>\n    </div>\n  );\n}\nexport default Holiday;\n","import React from 'react';\n\nconst Expired = () => {\n    return ( \n        <div>\n            <h1 style={{color: \"red\"}}>Sorry, The Schedule has been expired. \n            <span role=\"img\" aria-label=\"sad\" style={{border : \"none\"}}>üôÅ</span>\n            </h1>\n            <p>If you want to update the schedule, create an issue at <a href=\"https://github.com/mrinjamul/myschedule/issues/\">mrinjamul/myschedule</a></p>\n        </div>\n     );\n}\n\nexport default Expired;","import React, { Component } from \"react\";\nimport Fschedule from \"./Fschedule\";\nimport Day from \"./Day\";\nimport Holiday from \"./Holiday\";\nimport {classes} from \"./classes\"\n\nimport \"./Main.css\";\nimport Expired from \"./Expired\";\n\nclass Schedule extends Component {\n  constructor() {\n    super();\n    this.state = {\n      fullView: false,\n      displayTime: \"HH:MM:SS AMPM\",\n    };\n\n    setInterval(() => {\n      const time = new Date();\n      var hh = time.getHours();\n      var mm = time.getMinutes();\n      var ss = time.getSeconds();\n\n      var ampm = hh >= 12 ? \"PM\" : \"AM\";\n      hh = hh > 12 ? hh - 12 : hh;\n      hh = hh < 10 ? \"0\" + hh : hh;\n      mm = mm < 10 ? \"0\" + mm : mm;\n      ss = ss < 10 ? \"0\" + ss : ss;\n      hh = hh === \"00\" ? \"12\" : hh;\n\n      this.setState({\n        displayTime:\n          ss % 2 === 0\n            ? hh + \":\" + mm + \":\" + ss + \" \" + ampm\n            : hh + \" \" + mm + \" \" + ss + \" \" + ampm,\n      });\n    }, 500);\n  }\n\n  // handleClick = () => {\n  //   this.setState((prevState) => {\n  //     return {\n  //       fullView: !prevState.fullView,\n  //     };\n  //   });\n  // };\n\n  render() {\n    const date = new Date();\n    const day = date.getDay();\n    const hours = date.getHours();\n\n    const now = date.getHours() * 60 + date.getMinutes();\n    const eleven = 11 * 60;\n    // const twelve = 12 * 60;\n    // const thirteen = 13 * 60;\n    const thirteenHalf = 13 * 60 + 30;\n    const fourteen = 14 * 60;\n    // const fifteen = 15 * 60;\n    const sixteenHalf = 16 * 60 + 30;\n\n    let timeOfDay;\n    let DayName;\n    let CurrentS;\n    let Class_1;\n    let Class_2;\n    let availability = true;\n    let expires = Date.parse(this.props.expires)\n    if (date >= expires) {\n      availability = false;\n    }\n\n    // const room = [' ','F1','S1','‚á®',];\n\n    const messages = [\"Break Time\", \"No class available right now !\"];\n\n    if (5 < hours && hours < 12) {\n      timeOfDay = \"Morning\";\n    } else if (hours >= 12 && hours < 17) {\n      timeOfDay = \"Afternoon\";\n    } else if (hours > 17 && hours < 20) {\n      timeOfDay = \"Evening\";\n    } else if (hours > 0 && hours < 2) {\n      timeOfDay = \"Mid Night\";\n    } else if (hours > 4 && hours < 5) {\n      timeOfDay = \"Dawn\";\n    } else {\n      timeOfDay = \"Night\";\n    }\n\n    if (day === 0) {\n      DayName = \"Sunday\";\n      Class_1 = classes[2];\n      Class_2 = classes[5];\n      if (eleven <= now && now < thirteenHalf) {\n        CurrentS = Class_1;\n      } else if (thirteenHalf <= now && now < fourteen) {\n        CurrentS = messages[0];\n      } else if (fourteen <= now && now < sixteenHalf) {\n        CurrentS = Class_2;\n      } else {\n        CurrentS = messages[1];\n      }\n    } else if (day === 1) {\n      DayName = \"Monday\";\n      Class_1 = classes[3];\n      Class_2 = classes[4];\n      if (eleven <= now && now < thirteenHalf) {\n        CurrentS = Class_1;\n      } else if (thirteenHalf <= now && now < fourteen) {\n        CurrentS = messages[0];\n      } else if (fourteen <= now && now < sixteenHalf) {\n        CurrentS = Class_2;\n      } else {\n        CurrentS = messages[1];\n      }\n    } else if (day === 2) {\n      DayName = \"Tuesday\";\n      Class_1 = classes[1];\n      Class_2 = classes[3];\n      if (eleven <= now && now < thirteenHalf) {\n        CurrentS = Class_1;\n      } else if (thirteenHalf <= now && now < fourteen) {\n        CurrentS = messages[0];\n      } else if (fourteen <= now && now < sixteenHalf) {\n        CurrentS = Class_2;\n      } else {\n        CurrentS = messages[1];\n      }\n    } else if (day === 3) {\n      DayName = \"Wednesday\";\n      Class_1 = classes[1];\n      Class_2 = classes[2];\n      if (eleven <= now && now < thirteenHalf) {\n        CurrentS = Class_1;\n      } else if (thirteenHalf <= now && now < fourteen) {\n        CurrentS = messages[0];\n      } else if (fourteen <= now && now < sixteenHalf) {\n        CurrentS = Class_2;\n      } else {\n        CurrentS = messages[1];\n      }\n    } else if (day === 4) {\n      DayName = \"Thursday\";\n      Class_1 = classes[6];\n      Class_2 = classes[5];\n      if (eleven <= now && now < thirteenHalf) {\n        CurrentS = Class_1;\n      } else if (thirteenHalf <= now && now < fourteen) {\n        CurrentS = messages[0];\n      } else if (fourteen <= now && now < sixteenHalf) {\n        CurrentS = Class_2;\n      } else {\n        CurrentS = messages[1];\n      }\n    } else if (day === 5) {\n      DayName = \"Friday\";\n      CurrentS = messages[1];\n    } else {\n      DayName = \"Saturday\";\n      CurrentS = messages[1];\n    }\n\n    let sed;\n    if (this.state.fullView === true) {\n      sed = <Fschedule />;\n    }\n    let displayToday;\n    if (day === 5 || day === 6) {\n      displayToday = <Holiday Day={DayName} />;\n    } else {\n      displayToday = <Day Day={DayName} Class_1={Class_1} Class_2={Class_2} />;\n    }\n    if (!availability) {\n      displayToday = <Expired/>\n    }\n    return (\n      <div className=\"main\">\n        <div className=\"section\">\n          <h1>\n            <span>My College Schedule</span>\n          </h1>\n          <h1>\n            Time: {this.state.displayTime} , {timeOfDay}{\" \"}\n          </h1>\n          { availability && <h1>Now : {CurrentS}</h1>}\n          {displayToday}\n          <br />\n          { availability &&\n          <button\n            onClick={() => {\n              this.state.fullView === false\n                ? this.setState({ fullView: true })\n                : this.setState({ fullView: false });\n            }}\n          >\n            <b>View Full Schedule</b>\n          </button>}\n        </div>\n        {sed}\n      </div>\n    );\n  }\n}\n\nexport default Schedule;\n","import React, { Component } from \"react\";\nimport Loading from \"./components/Loading\";\nimport Schedule from \"./components/Main\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n      updateOn: \"April 24, 2021\",\n      expires: \"March 30, 2021\",\n    };\n  }\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        isLoading: false,\n      });\n    }, 1500);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.isLoading ? (\n          <Loading />\n        ) : (\n          <div>\n            <Schedule expires={this.state.expires} />\n            <h3 className=\"copyright\"> Updated on {this.state.updateOn}. </h3>\n            <h3 className=\"copyright\" style={{ color: \"red\" }}> Valid til {this.state.expires}. </h3>\n            <h3 className=\"copyright\">\n              Made with{\" \"}\n              <font color=\"red\">\n                <b> ‚ù§ </b>\n              </font>{\" \"}\n              by Injamul Mohammad Mollah, All rights reversed\n            </h3>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}